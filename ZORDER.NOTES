 ZORDER_STRING index is a string where the first two digits are the quad number (00, 01, â€¦, 11) and each subsequent digit corresponds to one grid resolution. The digits are base 3 in aperture 3, and base 4 in aperture 4.

A ZORDER index is the digits in ZORDER_STRING packed into an unsigned 64 bit integer and output in hexadecimal (as per H3) . The first four bits (the first hexadecimal digit) is the quad number, and each subsequent digit corresponds to two grid resolutions.

To use ZORDER/ZORDER_STRING in grid generation output, set parameter output_cell_label_type to OUTPUT_ADDRESS_TYPE. Then set parameter output_address_type to ZORDER (or ZORDER_STRING). See the metafile in examples/zCollection.

ZORDER/ZORDER_STRING indexes can be used to generate a specific set of indexes (formerly limited to SEQNUMs using clip_subset_type of SEQNUMS). To do this set clip_subset_type to INPUT_ADDRESS_TYPE and input_address_type to ZORDER or ZORDER_STRING. See the metafile in examples/zNums.

ZORDER/ZORDER_STRING indexes can be used to specify the clipping polygons when clip_subset_type is COARSE_CELLS. Indexes of the type specified in input_address_type are specified in parameter clip_cell_addresses (which replaces clip_cell_seqnums). See the metafile in examples/zCellClip.

A dggrid_operation of TRANSFORM_POINTS will translate cell indexes from the specified input_address_type to output_address_type. See the metafile in examples/zTransform and the inputfiles in that directory, which are the same cells in multiple index forms.

dggrid_operation values of BIN_POINT_VALS and BIN_POINT_PRESENCE now output addresses using output_address_type (which can include ZORDER or ZORDER_STRING).

